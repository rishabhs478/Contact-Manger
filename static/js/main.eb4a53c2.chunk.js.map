{"version":3,"sources":["Component/layout/Header.js","context.js","Component/contacts/Contact.js","Component/contacts/Contacts.js","Component/layout/TextInputGroup.js","Component/contacts/AddContact.js","Component/contacts/EditContact.js","Component/pages/About.js","Component/pages/NotFound.js","Component/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","proptype","PropTypes","string","isRequired","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","then","res","data","value","this","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Test","title","body","fetch","response","json","App","exact","path","component","About","extact","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb4a53c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\r\n      <div className=\"container\">\r\n        <a href=\"\\\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\"> \r\n             \r\n              <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/contacts/Add' className=\"nav-link\">\r\n              <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/About' className=\"nav-link\">\r\n              <i className=\"fas fa-question\" /> \r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"my app\",\r\n};\r\nHeader.proptype = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => this.setState({ contacts: res.data }));\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\"; \r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onDeleteClick = async(id, dispatch) => {\r\n   await axios.delete('https://jsonplaceholder.typicode.com/users/${id}')\r\n  .then(res=>dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  }; \r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3 \">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fa fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: 'pointer',\r\n                float: 'right',\r\n                color: 'black',\r\n                marginRight: '1rem'\r\n              }}\r\n            />\r\n          </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n        \r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n        return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <spam className='text-danger'>contact</spam>\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup=({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n})=> {\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        className={classnames(\"form-control from-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n    />\r\n     {error && <div className=\"invalid-feedback\">{error}</div>}\r\n     \r\n    <div className='invalid-feedback'></div>\r\n</div>\r\n  );\r\n};\r\nTextInputGroup.propTypes={\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onchange:PropTypes.func.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    error:PropTypes.string\r\n}\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is requird\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is requird\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is requird\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n\r\n      error: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-Header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <div className=\"form-group\">\r\n          \r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name\"\r\n                      error={errors.name}\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n      \r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-primary  my-3\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  \r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is requird\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is requird\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is requird\" } });\r\n      return;\r\n    }\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n\r\n      error: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-Header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <div className=\"form-group\">\r\n                    \r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name\"\r\n                      error={errors.name}\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    \r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    \r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter Phone\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-success  my-3\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default ()=> {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};","import React from 'react'\r\n\r\nexport default function \r\n() {\r\n  return (\r\n    <div>\r\n        <h1 className='display-4'>\r\n            <span className='text-danger'>404</span>\r\n            Page Not Found\r\n        </h1>\r\n        <p className=\"lead\">\r\n            sorry,that page does not exist\r\n        </p>\r\n    \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state ={\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState({\r\n          title:data.title,\r\n          body:data.body,\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n const{title,body}=this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title} </h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Header from \"./Component/layout/Header\";\nimport Contacts from \"./Component/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./Component/contacts/AddContact\";\nimport EditContact from \"./Component/contacts/EditContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./Component/pages/About\";\nimport NotFound from \"./Component/pages/NotFound\";\nimport Test from \"./Component/test/Test\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager \" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route extact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}